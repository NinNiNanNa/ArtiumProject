<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 Doctype 설정 -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.springboot.review.IReviewService">

	<select id="getTotalCount" resultType="int" parameterType="com.edu.springboot.review.ParameterDTO">
		SELECT COUNT (*) FROM (
			SELECT r.*, m.*FROM review r JOIN members m ON r.user_id = m.user_id
			<if test="searchKeyword!=null and !searchKeyword.equals('')">
				WHERE ${searchField} LIKE '%'||#{searchKeyword}||'%'
			</if>
		) 
	</select>

	<select id="listPage" resultType="com.edu.springboot.review.ReviewDTO" parameterType="com.edu.springboot.review.ParameterDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT r.*, m.user_name, m.user_image FROM review r JOIN members m ON r.user_id = m.user_id
				<if test="searchKeyword!=null and !searchKeyword.equals('')">
					WHERE ${searchField} LIKE '%'||#{searchKeyword}||'%'
				</if>
				ORDER BY rv_id DESC
			) Tb
		)
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>
	
	<select id="view" resultType="com.edu.springboot.review.ReviewDTO" parameterType="com.edu.springboot.review.ReviewDTO">
		SELECT * FROM (
			SELECT r.*, m.user_name, m.user_image FROM review r JOIN members m ON r.user_id = m.user_id
		)
		WHERE rv_id=#{rv_id}
	</select>
	<update id="visitCount" parameterType="com.edu.springboot.review.ReviewDTO">
		UPDATE review SET rv_visitcount = rv_visitcount + 1 WHERE rv_id=#{rv_id}
	</update>
	 	  
	<!-- @Param 어노테이션으로 변경된 파라미터를 인파라미터로 설정한다. -->
	<insert id="write">
		INSERT INTO review(rv_id, rv_title, rv_date, rv_stime, rv_etime, rv_congestion, rv_transportation, rv_revisit, rv_image, rv_content, user_id)
		VALUES(seq_board_num.nextval, #{rv_title}, #{rv_date}, #{rv_stime}, #{rv_etime}, #{rv_congestion}, #{rv_transportation}, #{rv_revisit}, #{rv_image}, #{rv_content}, #{user_id})
	</insert>
	
	<update id="edit" parameterType="com.edu.springboot.review.ReviewDTO">
       	UPDATE review SET
			rv_title=#{rv_title}, 
			rv_date=#{rv_date}, 
			rv_stime=#{rv_stime}, 
			rv_etime=#{rv_etime}, 
			rv_congestion=#{rv_congestion}, 
			rv_transportation=#{rv_transportation}, 
			rv_revisit=#{rv_revisit}, 
			rv_image=#{rv_image}, 
			rv_content=#{rv_content}
       	WHERE rv_id=#{rv_id}
    </update>
    
    <delete id="delete">
    	DELETE FROM review WHERE rv_id=#{param1}
    </delete>

</mapper>